;-------------------------------------------------------------------------
;Slots - by M1nzfrischer
;
;
;       (C)2024
;
;-------------------------------------------------------------------------

.nolist
        #define    progstart    $9D95
.list
; ==================================================================================================
; TI-83 Plus Ion
; ==================================================================================================

;#ifdef TI83P
#define	bcall(label)	RST 28h \ .dw label
COORD   .equ    8A3Ah
        .org    progstart-2
.org 9D93h
.db $BB,$6D

#include "ti83plus.inc"
#include "ion8X.inc"

counter = saferam3

;#endif

        ret
        jr      nc,START 			        ;jumps to the label START
        .db     "SLOTS by M1nzfrisher",0	;The title displayed by ION

START:         LD   HL,$0000
               LD   (COORD),HL

               bcall(_GrBufClr)

SET_SCREEN1:   
               ;LD   HL,PLOTSSCREEN		;sets half LCD black
               ;LD   DE,PLOTSSCREEN+1
               ;LD   (HL),$FF
               ;LD   BC,383
               ;LDIR
          

               LD   H,08h
               LD   L,0Ch
	           LD   IX,TEXT
               LD     HL, machine
               LD     DE, PlotSScreen+(19*12)    ;Start at nineteenth row of display
               LD     BC, 25*12                  ;25 rows of data
               LDIR                      
               bcall(_GrBufCpy)

SET_ROW1:
               LD   A,H
               ADD  A,8
               LD   H,A
               PUSH HL
               CALL XORSPR
               POP  HL
               LD   A,1
               CP   (IX)                ;check IX against A                   
               JR   NZ,SET_ROW1         ;if IX != A, jump to SET_ROW1

               LD   A,0Ch
               LD   L,16h
	           LD   IX,diamond
               CALL XORSPR

               LD   A,1Ch
               LD   L,16h
	           LD   IX,diamond
               CALL XORSPR

               LD   A,2Ch
               LD   L,16h
	           LD   IX,diamond
               CALL XORSPR

               LD   A,3Ch
               LD   L,16h
	           LD   IX,diamond
               CALL XORSPR

               LD   A,4Ch
               LD   L,16h
	           LD   IX,CPYRGHT
               CALL XORSPR

SET_ROW2:
               LD   A,0Ch
               LD   L,1Eh
	           LD   IX,coin
               CALL XORSPR

               LD   A,1Ch
               LD   L,1Eh
	           LD   IX,coin
               CALL XORSPR

               LD   A,2Ch
               LD   L,1Eh
	           LD   IX,coin
               CALL XORSPR

               LD   A,3Ch
               LD   L,1Eh
	           LD   IX,diamond
               CALL XORSPR

               LD   A,4Ch
               LD   L,1Eh
	           LD   IX,CPYRGHT
               CALL XORSPR                              

               LD   HL,PLOTSSCREEN		;save whole screen as background
               LD   DE,SAVESSCREEN
               LD   BC,768
               LDIR



MAIN_LOOP:     
               ;CALL SP_PUT			    ;put the sprite on (X,Y)
               CALL ionFastCopy			;put the picture on the LCD
               ;CALL SP_PUT
               ;CALL ionFastCopy			;put the picture on the LCD

	            bcall(_GetKey)
	            CP kYequ
	            CALL Z,SINGLE_BET
	            CP kWindow
	            CALL Z,DOUBLE_BET
                CP kEnter
                CALL Z,SPIN_ENTER
	            CP kClear
	            CALL Z,$9D95
               ;CALL DELAY              ;delay to slow down the ball
               ;CALL RESET_SCREEN		;recall the background in PLOTSSCREEN

               JR MAIN_LOOP
SP_PUT:
               LD   HL,COORD
               LD   A,(HL)
               INC  HL
               LD   L,(HL)
               LD   IX,diamond

;-----> Draw a sprite
; b=size of sprite
; l=yc
; a=xc
; ix holds pointer
XORSPR:
               LD   B,8                         ;size of the sprite
               CALL ionPutSprite
               ;CALL ionPutSprite
               RET
;------

Reset_Screen:  LD   HL,SAVESSCREEN
               LD   DE,PLOTSSCREEN
               LD   BC,768
               LDIR
               RET

DELAY:         LD   B,20
LOOP1:         PUSH BC
               LD   B,255
LOOP2:         DJNZ LOOP2
               POP  BC
               DJNZ LOOP1
               RET

SINGLE_BET:
               RET
DOUBLE_BET:
               RET

SPIN_ENTER:
	       LD   IX, coin

               LD a, 0Ch
               ld (xpos), a

SPIN_RESET:

REEL1:

               LD a, 16h
               ld (ypos), a

               ;LD IX, diamond
               ;INC (IX)                      ;scrolls through sprite memory
               

               
SPIN_REELS:

               LD DE,(ypos)         ;xpos is delcared 1 line down
                                    ;from ypos (next byte of mem)
                                    ;16 bit registers store in reverse
                                    ;so D = xpos, E = ypos  
               LD A,D 
               LD L,E       
               ;LD L,16h
SPIN_LOOP:      

               CALL XORSPR
               CALL ionFastCopy 
               ;CALL DELAY

               ;lets go vertical
               LD HL, xpos
               LD A, 16
               ADD A, (HL)
               LD (xpos), A
               LD A, (xpos)
               CP 92
               CALL Z, SPIN_RESET_X

               LD HL, ypos
               INC (HL)
               LD A, (ypos)
               CP 44
               CALL Z, SPIN_RESET
                ;LD     HL, $1F1A
                ;LD     (PenCol), HL      ; PenCol comes before PenRow
                ;LD     A,0ACh
                ;LD     HL, dispstr
                ;bcall(_VPutS)
                ;bcall(_PutC)
                ;ret
               ;LD A,L
               ;INC A
               ;SUB 64
               ;RET NC 

               ;LD A,0Ch
               ;LD L,2Eh
	           ;LD   IX,spin_anim
               ;CALL XORSPR
    
               JR SPIN_REELS

SPIN_RESET_X:
               LD a, 0Ch
               LD (xpos), a
               RET

ypos:   .DB     16h
xpos:   .DB     0Ch

slot_offset:     .equ     8

dispstr:
        .DB     "Here is our HL value.", 0


TEXT:
                .db     %11111111
                .db     %10000000
                .db     %01111111
                .db     %00000001
                .db     %00000001
                .db     %11111110
                .db     %00000000
                .db     %00000000

                .db     %10000000
                .db     %10000000
                .db     %10000000
                .db     %10000000
                .db     %10000000
                .db     %11111111
                .db     %00000000
                .db     %00000000

                .db     %01111110
                .db     %10000001
                .db     %10000001
                .db     %10000001
                .db     %10000001
                .db     %01111110
                .db     %00000000
                .db     %00000000

                .db     %11111111
                .db     %00011000
                .db     %00011000
                .db     %00011000
                .db     %00011000
                .db     %00011000
                .db     %00000000
                .db     %00000000

                .db     %11111111
                .db     %10000000
                .db     %01111111
                .db     %00000001
                .db     %00000001
                .db     %11111110
                .db     %00000000
                .db     %00000000

                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000

                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000

                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %00000000

                ;.db     %00000001

CPYRGHT:
                .db     %00000000
                .db     %00000000
                .db     %00100000
                .db     %01010000
                .db     %01010101
                .db     %00100110
                .db     %01011000
                .db     %10000000

                .db     %00000000
                .db     %00000000
                .db     %01001000
                .db     %11000100
                .db     %01000100
                .db     %00101000
                .db     %00010000
                .db     %01100000

                .db     %00000000
                .db     %01110011
                .db     %10000101
                .db     %01000101
                .db     %00100111
                .db     %00010101
                .db     %00010101
                .db     %11100101

                .db     %00000000
                .db     %01010011
                .db     %01010101
                .db     %01010101
                .db     %01100111
                .db     %01010101
                .db     %01010101
                .db     %01010101

diamond:           
                .db     %00000000
                .db     %01111110
                .db     %10000111
                .db     %10010011
                .db     %11111111
                .db     %01000110
                .db     %00111000
                .db     %00010000

coin:           
                .db     %00000000
                .db     %01111110
                .db     %10110111
                .db     %10010111
                .db     %10001111
                .db     %10000111
                .db     %01111110
                .db     %00000000

spin_anim:           
                .db     %00000000
                .db     %00000000
                .db     %01111110
                .db     %10000001
                .db     %10000001
                .db     %01111110
                .db     %00000000
                .db     %00000000
                .db     %00000000
                .db     %01100110
                .db     %00000000
                .db     %01111110
                .db     %01111110
                .db     %00100100
                .db     %00100100
                .db     %00000000

tilogo:
    .db    $00, $00, $00, $00, $00, $FE, $00, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FE, $00, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FE, $30, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FE, $78, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FF, $30, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FF, $07, $E0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FF, $77, $E0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $FF, $77, $E0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $F8, $61, $E0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $1F, $F8, $E3, $E0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $7F, $F8, $E3, $F0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $7F, $FE, $EF, $F0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $3F, $FE, $CF, $F0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $1F, $FD, $DF, $F0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $0F, $FD, $DF, $F0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $07, $FC, $1F, $F0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $07, $9C, $0F, $C0, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $03, $0E, $0F, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $0F, $FE, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $07, $F8, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $07, $F8, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $03, $F0, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $03, $F0, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $01, $F0, $00, $00, $00, $00, $00
    .db    $00, $00, $00, $00, $00, $00, $F8, $00, $00, $00, $00, $00

machine:
    .db    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
    .db    $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $80, $01, $00, $01, $00, $01, $00, $01, $00, $01, $00
    .db    $00, $7F, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $00

slot_reel_all_spin_anim1:
    .db    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
    .db    $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $00
    .db    $00, $A4, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $92, $73, $92, $73, $92, $73, $92, $73, $92, $73, $00
    .db    $00, $7F, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $00

slot_reel_all_spin_anim2:
    .db    $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00, $00
    .db    $00, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $A4, $FE, $00
    .db    $00, $7F, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FF, $FE, $00


.end
END